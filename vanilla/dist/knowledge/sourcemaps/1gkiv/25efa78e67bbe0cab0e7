{"version":3,"sources":["webpack://vanilla-knowledge/./node_modules/moment/locale sync en","webpack://vanilla-knowledge/./node_modules/lodash/clone.js","webpack://vanilla-knowledge/./packages/vanilla-utils/src/debugUtils.ts","webpack://vanilla-knowledge/./packages/vanilla-i18n/src/localeStore.ts","webpack://vanilla-knowledge/./packages/vanilla-i18n/src/LocaleProvider.tsx","webpack://vanilla-knowledge/./packages/vanilla-i18n/src/translationStore.ts","webpack://vanilla-knowledge/./packages/vanilla-i18n/src/index.ts","webpack://vanilla-knowledge/./applications/vanilla/src/scripts/categories/CategorySuggestionActions.ts","webpack://vanilla-knowledge/./applications/vanilla/src/scripts/categories/categoriesReducer.ts","webpack://vanilla-knowledge/./applications/vanilla/src/scripts/redux/reducer.ts","webpack://vanilla-knowledge/./applications/vanilla/src/scripts/entries/knowledge.tsx","webpack://vanilla-knowledge/./packages/vanilla-utils/src/stringUtils.ts","webpack://vanilla-knowledge/./packages/vanilla-utils/src/systemUtils.ts","webpack://vanilla-knowledge/./packages/vanilla-utils/src/typeUtils.ts","webpack://vanilla-knowledge/./packages/vanilla-utils/index.ts","webpack://vanilla-knowledge/./build/entries/public-path.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","baseClone","CLONE_SYMBOLS_FLAG","value","internalDebugValue","debug","newValue","undefined","logDebug","console","log","logError","error","logWarning","warn","currentLocale","localeStore","callbacks","getLocales","setCurrentLocale","localeKey","forEach","callback","getCurrentLocale","loadLocales","locales","LocaleContext","React","createContext","LocaleProvider","props","useState","setLocales","useEffect","push","Provider","children","translationStore","loadTranslations","translations","translate","str","defaultTranslation","substr","t","createAction","actionCreatorFactory","CategorySuggestionActions","query","apiThunk","bindThunkAction","loadCategories","a","params","api","get","response","data","dispatch","debounce","interalLoadCategories","ReduxActions","async","INITIAL_STATE","suggestions","status","LoadStatus","PENDING","categoriesReducer","produce","reducerWithInitialState","clone","case","started","nextState","payload","LOADING","done","SUCCESS","result","failed","ERROR","forumReducer","combineReducers","categories","registerReducer","hashString","split","reduce","prevHash","currVal","charCodeAt","slugify","options","whiteSpaceNormalizeRegexp","allowMultipleDashes","normalize","replace","trim","toLocaleLowerCase","OS","indexArrayByKey","array","key","object","item","__webpack_public_path__","assetUrl"],"mappings":"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","file":"addons/vanilla.min.js?25efa78e67bbe0cab0e7","sourcesContent":["var map = {\n\t\"./en-SG\": 44,\n\t\"./en-SG.js\": 44,\n\t\"./en-au\": 45,\n\t\"./en-au.js\": 45,\n\t\"./en-ca\": 46,\n\t\"./en-ca.js\": 46,\n\t\"./en-gb\": 47,\n\t\"./en-gb.js\": 47,\n\t\"./en-ie\": 48,\n\t\"./en-ie.js\": 48,\n\t\"./en-il\": 49,\n\t\"./en-il.js\": 49,\n\t\"./en-nz\": 50,\n\t\"./en-nz.js\": 50\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 103;","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = clone;\n","/**\n * Utility function related to logging/debugging.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nlet internalDebugValue = false;\n\n/**\n * Get or set the debug flag.\n *\n * @param newValue - The new value of debug.\n * @returns the current debug setting.\n */\nexport function debug(newValue?: boolean): boolean {\n    if (newValue !== undefined) {\n        internalDebugValue = newValue;\n    }\n\n    return internalDebugValue;\n}\n\n/**\n * Log something to console.\n * This only prints in debug mode.\n *\n * @param value - The value to log.\n */\nexport function logDebug(...value: any[]) {\n    if (internalDebugValue) {\n        // eslint-disable-next-line no-console\n        console.log(...value);\n    }\n}\n\n/**\n * Log an error to console.\n * This will not run in test mode _unless_ debug is set to true.\n *\n * @param value - The value to log.\n */\nexport function logError(...value: any[]) {\n    if (!internalDebugValue && process.env.NODE_ENV === \"test\") {\n        return;\n    }\n    // eslint-disable-next-line no-console\n    console.error(...value);\n}\n\n/**\n * Log a warning to console.\n * This will not run in test mode _unless_ debug is set to true.\n *\n * @param value - The value to log.\n */\nexport function logWarning(...value: any[]) {\n    if (!internalDebugValue && process.env.NODE_ENV === \"test\") {\n        return;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(...value);\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nexport interface ILocale {\n    localeID: string;\n    localeKey: string;\n    regionalKey: string;\n    displayNames: {\n        [localeKey: string]: string;\n    };\n}\n\nlet currentLocale = \"en\";\nlet localeStore: ILocale[] = [];\nlet callbacks: Array<() => void> = [];\n\n/**\n * Get the available locales.\n */\nexport function getLocales(): ILocale[] {\n    return localeStore;\n}\n\n/**\n * Register a handler for if the locales change.\n * @param callback\n */\nexport function onLocaleChange(callback: () => void) {\n    callbacks.push(callback);\n}\n\n/**\n * Set the current locale.\n */\nexport function setCurrentLocale(localeKey: string) {\n    currentLocale = localeKey;\n    callbacks.forEach(callback => callback());\n}\n\n/**\n * Get the current locale.\n */\nexport function getCurrentLocale() {\n    return currentLocale;\n}\n\n/**\n * Load a group of locales.\n */\nexport function loadLocales(locales: ILocale[]) {\n    localeStore = [...localeStore, ...locales];\n    callbacks.forEach(callback => callback());\n}\n\n/**\n * Clear the loaded locales.\n */\nexport function clearLocales() {\n    localeStore = [];\n    callbacks.forEach(callback => callback());\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { ILocale, getLocales, onLocaleChange, getCurrentLocale } from \"./localeStore\";\nimport { logWarning } from \"@vanilla/utils\";\n\nconst LocaleContext = React.createContext<{\n    locales: ILocale[];\n    currentLocale: string | null;\n}>({\n    locales: [],\n    currentLocale: null,\n});\n\nexport function LocaleProvider(props: { children?: React.ReactNode }) {\n    const [locales, setLocales] = useState(getLocales());\n    const [currentLocale, setCurrentLocale] = useState(getCurrentLocale());\n\n    if (!currentLocale) {\n        logWarning(\"No locale loaded for <LocaleProvider />\");\n    }\n\n    useEffect(() => {\n        setLocales(getLocales());\n        setCurrentLocale(getCurrentLocale());\n\n        onLocaleChange(() => {\n            setLocales(getLocales());\n            setCurrentLocale(getCurrentLocale());\n        });\n    }, [setLocales, setCurrentLocale]);\n\n    return (\n        <LocaleContext.Provider\n            value={{\n                locales,\n                currentLocale,\n            }}\n        >\n            {props.children}\n        </LocaleContext.Provider>\n    );\n}\n\nexport function useLocaleInfo() {\n    return useContext(LocaleContext);\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\ninterface ITranslations {\n    [key: string]: string;\n}\n\nlet translationStore: ITranslations = {};\n\n/**\n * Load a set of key value pairs as translation resources.\n */\nexport function loadTranslations(translations: ITranslations) {\n    translationStore = { ...translations };\n}\n\n/**\n * Clear all translation resources.\n */\nexport function clearTranslations() {\n    translationStore = {};\n}\n\n/**\n * Translate a string into the current locale.\n *\n * @param str - The string to translate.\n * @param defaultTranslation - The default translation to use.\n *\n * @returns Returns the translation or the default.\n */\nexport function translate(str: string, defaultTranslation?: string): string {\n    // Codes that begin with @ are considered literals.\n    if (str.substr(0, 1) === \"@\") {\n        return str.substr(1);\n    }\n\n    if (translationStore[str] !== undefined) {\n        return translationStore[str];\n    }\n\n    return defaultTranslation !== undefined ? defaultTranslation : str;\n}\n\n/**\n * The t function is an alias for translate.\n */\nexport const t = translate;\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nexport * from \"./LocaleDisplayer\";\nexport * from \"./localeStore\";\nexport * from \"./translationStore\";\nexport * from \"./LocaleProvider\";\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport ReduxActions, { bindThunkAction } from \"@library/redux/ReduxActions\";\nimport actionCreatorFactory from \"typescript-fsa\";\nimport { IApiError } from \"@library/@types/api/core\";\nimport debounce from \"lodash/debounce\";\nimport { ICategory } from \"@vanilla/addon-vanilla/@types/api/categories\";\n\nconst createAction = actionCreatorFactory(\"@@categorySuggestions\");\n\nexport default class CategorySuggestionActions extends ReduxActions {\n    public static loadCategories = createAction.async<{ query: string }, ICategory[], IApiError>(\"GET\");\n\n    private interalLoadCategories = (query: string) => {\n        const apiThunk = bindThunkAction(CategorySuggestionActions.loadCategories, async () => {\n            if (query === \"\") {\n                return [];\n            }\n\n            const params = { query };\n            const response = await this.api.get(\"/categories/search\", { params });\n            return response.data;\n        })({ query });\n        return this.dispatch(apiThunk);\n    };\n\n    public loadCategories = debounce(this.interalLoadCategories, 100);\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { LoadStatus, ILoadable } from \"@library/@types/api/core\";\nimport { produce } from \"immer\";\nimport CategorySuggestionActions from \"@vanilla/addon-vanilla/categories/CategorySuggestionActions\";\nimport { reducerWithInitialState } from \"typescript-fsa-reducers\";\nimport clone from \"lodash/clone\";\nimport { ICategory } from \"@vanilla/addon-vanilla/@types/api/categories\";\n\nexport interface ICategoriesState {\n    suggestions: ILoadable<ICategory[]>;\n}\n\nconst INITIAL_STATE: ICategoriesState = {\n    suggestions: {\n        status: LoadStatus.PENDING,\n    },\n};\n\nexport const categoriesReducer = produce(\n    reducerWithInitialState(clone(INITIAL_STATE))\n        .case(CategorySuggestionActions.loadCategories.started, (nextState, payload) => {\n            nextState.suggestions.status = LoadStatus.LOADING;\n            return nextState;\n        })\n        .case(CategorySuggestionActions.loadCategories.done, (nextState, payload) => {\n            nextState.suggestions.status = LoadStatus.SUCCESS;\n            nextState.suggestions.data = payload.result;\n            return nextState;\n        })\n        .case(CategorySuggestionActions.loadCategories.failed, (nextState, payload) => {\n            nextState.suggestions.status = LoadStatus.ERROR;\n            nextState.suggestions.error = payload.error;\n            return nextState;\n        }),\n);\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { categoriesReducer } from \"@vanilla/addon-vanilla/categories/categoriesReducer\";\nimport { combineReducers } from \"redux\";\nimport { IForumState } from \"./state\";\n\nexport const forumReducer = combineReducers<IForumState>({\n    categories: categoriesReducer,\n});\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { registerReducer } from \"@library/redux/reducerRegistry\";\nimport { forumReducer } from \"@vanilla/addon-vanilla/redux/reducer\";\n\nregisterReducer(\"forum\", forumReducer);\n","/**\n * Utilities related to strings.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * A simple, fast method of hashing a string. Similar to Java's hash function.\n * https://stackoverflow.com/a/7616484/1486603\n *\n * @param str - The string to hash.\n *\n * @returns The hash code returned.\n */\nexport function hashString(str: string): number {\n    function hashReduce(prevHash, currVal) {\n        // tslint:disable-next-line:no-bitwise\n        return (prevHash << 5) - prevHash + currVal.charCodeAt(0);\n    }\n    return str.split(\"\").reduce(hashReduce, 0);\n}\n\ntype CompareReturn = -1 | 0 | 1;\n\n/**\n * Utility for sorting values. Similar to the <=> operator in PHP.\n *\n * @param val1 The first value to compare.\n * @param val2 The second value to compare.\n *\n * @returns -1, 0, or 1\n */\nexport function compare<T extends string | number>(val1: T, val2: T): CompareReturn {\n    if (typeof val1 === \"string\" && typeof val2 === \"string\") {\n        return val1.localeCompare(val2) as CompareReturn;\n    } else {\n        if (val1 > val2) {\n            return 1;\n        } else if (val1 < val2) {\n            return -1;\n        }\n        return 0;\n    }\n}\n\n/**\n * Parse a string into a URL friendly format.\n *\n * Eg. Why Uber isn’t spelled Über -> why-uber-isnt-spelled-uber\n *\n * @param str The string to parse.\n */\nexport function slugify(\n    str: string,\n    options?: {\n        allowMultipleDashes?: boolean;\n    },\n): string {\n    const whiteSpaceNormalizeRegexp = options && options.allowMultipleDashes ? /[\\s]+/g : /[-\\s]+/g;\n    return str\n        .normalize(\"NFD\") // Normalize accented characters into ASCII equivalents\n        .replace(/[^\\w\\s$*_+~.()'\"\\-!:@]/g, \"\") // REmove characters that don't URL encode well\n        .trim() // Trim whitespace\n        .replace(whiteSpaceNormalizeRegexp, \"-\") // Normalize whitespace\n        .toLocaleLowerCase(); // Convert to locale aware lowercase.\n}\n\n/**\n * Split a string in multiple pieces similar to String.prototype.split but ignore most acccent characters.\n *\n * This will still return pieces with accents.\n *\n * @param toSplit The string to split.\n * @param splitWith The string to split with.\n */\nexport function splitStringLoosely(toSplit: string, splitWith: string): string[] {\n    const normalizedName = toSplit.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    const normalizedSplitTerm = splitWith.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    const normalizedPieces = normalizedName.split(new RegExp(`(${normalizedSplitTerm})`, \"i\"));\n\n    let charactersUsed = 0;\n    return normalizedPieces.map(piece => {\n        const start = charactersUsed;\n        charactersUsed += piece.length;\n        return toSplit.substring(start, charactersUsed);\n    });\n}\n\ninterface IMentionMatch {\n    match: string;\n    rawMatch: string;\n}\n\n/**\n * Custom matching to allow quotation marks in the matching string as well as spaces.\n * Spaces make things more complicated.\n *\n * @param subtext - The string to be tested.\n * @param shouldStartWithSpace - Should the pattern include a test for a whitespace prefix?\n * @returns Matching string if successful.  Null on failure to match.\n */\nexport function matchAtMention(\n    subtext: string,\n    shouldStartWithSpace: boolean = false,\n    requireQuotesForWhitespace: boolean = true,\n): IMentionMatch | null {\n    // Split the string at the lines to allow for a simpler regex.\n    const lines = subtext.split(\"\\n\");\n    const lastLine = lines[lines.length - 1];\n\n    // If you change this you MUST change the regex in src/scripts/__tests__/legacy.test.js !!!\n    /**\n     * Put together the non-excluded characters.\n     *\n     * @param {boolean} excludeWhiteSpace - Whether or not to exclude whitespace characters.\n     *\n     * @returns {string} A Regex string.\n     */\n    function nonExcludedCharacters(excludeWhiteSpace) {\n        let excluded =\n            \"[^\" +\n            '\"' + // Quote character\n            \"\\\\u0000-\\\\u001f\\\\u007f-\\\\u009f\" + // Control characters\n            \"\\\\u2028\"; // Line terminator\n\n        if (excludeWhiteSpace) {\n            excluded += \"\\\\s\";\n        }\n\n        excluded += \"]\";\n        return excluded;\n    }\n\n    let regexStr =\n        \"@\" + // @ Symbol triggers the match\n        \"(\" +\n        // One or more non-greedy characters that aren't excluded. Whitespace is allowed, but a starting quote is required.\n        '\"(' +\n        nonExcludedCharacters(false) +\n        '+?)\"?' +\n        \"|\" + // Or\n        // One or more non-greedy characters that aren't exluded. Whitespace may be excluded.\n        \"(\" +\n        nonExcludedCharacters(requireQuotesForWhitespace) +\n        '+?)\"?' +\n        \")\" +\n        \"(?:\\\\n|$)\"; // Newline terminates.\n\n    // Determined by at.who library\n    if (shouldStartWithSpace) {\n        regexStr = \"(?:^|\\\\s)\" + regexStr;\n    }\n    const regex = new RegExp(regexStr, \"gi\");\n    const match = regex.exec(lastLine);\n    if (match) {\n        return {\n            rawMatch: match[0],\n            match: match[2] || match[1], // Return either of the matching groups (quoted or unquoted).\n        };\n    }\n\n    // No match\n    return null;\n}\n\nconst SAFE_PROTOCOL_REGEX = /^(http:\\/\\/|https:\\/\\/|tel:|mailto:\\/\\/|\\/)/;\n\n/**\n * Sanitize a URL to ensure that it matches a whitelist of approved url schemes. If the url does not match one of these schemes, prepend `unsafe:` before it.\n *\n * Allowed protocols\n * - \"http://\",\n * - \"https://\",\n * - \"tel:\",\n * - \"mailto://\",\n *\n * @param url The url to sanitize.\n */\nexport function sanitizeUrl(url: string) {\n    if (url.match(SAFE_PROTOCOL_REGEX)) {\n        return url;\n    } else {\n        return \"unsafe:\" + url;\n    }\n}\n\n/**\n * Capitalize the first character of a string.\n *\n * @param str The string to modify.\n */\nexport function capitalizeFirstLetter(str: string): string {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n/**\n * Simple utility function for waiting some duration in promise.\n *\n * @param duration The amount of time to wait.\n */\nexport function promiseTimeout(duration: number): Promise<void> {\n    return new Promise(resolve => {\n        setTimeout(resolve, duration);\n    });\n}\n","/**\n * Utilities related to the user's system.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nexport enum OS {\n    IOS = \"ios\",\n    ANDROID = \"android\",\n    UNKNOWN = \"unkwown\",\n}\n\n/**\n * Provide relatively rough detection of mobile OS.\n *\n * This is not even close to perfect but can be used to try and offer,\n * OS specific input elements for things like datetimes.\n */\nexport function guessOperatingSystem(): OS {\n    const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n    if (/android/i.test(userAgent)) {\n        return OS.ANDROID;\n    }\n\n    // iOS detection from: http://stackoverflow.com/a/9039885/177710\n    if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n        return OS.IOS;\n    }\n\n    return OS.UNKNOWN;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\ninterface IClass {\n    new (): any;\n}\n\n/**\n * Determine if an instance is an instance of any of the listed classes.\n *\n * @param needle The instance.\n * @param haystack The classes to check.\n */\nexport function isInstanceOfOneOf(needle: any, haystack: IClass[]) {\n    for (const classItem of haystack) {\n        if (needle instanceof classItem) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/**\n * Transform an array of objects and an map of objets with a given key.\n *\n * Objects that do not contain the given key are dropped.\n *\n * @param array The array to go through.\n * @param key The key to lookup.\n */\nexport function indexArrayByKey<T extends object>(\n    array: T[],\n    key: string,\n): {\n    [key: string]: T;\n} {\n    const object = {};\n    for (const item of array) {\n        if (key in item) {\n            if (!(item[key] in object)) {\n                object[item[key]] = [];\n            }\n            object[item[key]].push(item);\n        }\n    }\n    return object;\n}\n","/**\n * General utility functions.\n * This file should have NO external dependencies other than javascript.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nexport * from \"./src/debugUtils\";\nexport * from \"./src/fileUtils\";\nexport * from \"./src/mathUtils\";\nexport * from \"./src/promiseUtils\";\nexport * from \"./src/stringUtils\";\nexport * from \"./src/systemUtils\";\nexport * from \"./src/typeUtils\";\n","/**\n * Set wepback's public path.\n * Otherwise the lookups of dynamically imported webpack files can fail on sites that have a different webroot\n * Eg. installed in a subfolder / using Reverse Proxy.\n *\n * @author Adam Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { assetUrl } from \"@library/utility/appUtils\";\n\n/**\n * This needs to be a free variable.\n *\n * Webpack does some magic to make this work.\n * It you try and set a local or global version of it, it WILL NOT work.\n *\n * @see https://stackoverflow.com/questions/12934929/what-are-free-variables\n * @see https://webpack.js.org/configuration/output/#output-publicpath\n * @see https://github.com/webpack/webpack/issues/2776#issuecomment-233208623\n */\n// @ts-ignore: Cannot find variable warning. See comment aboe.\n__webpack_public_path__ = assetUrl(\"/dist/\" + __BUILD__SECTION__ + \"/\");\n"],"sourceRoot":""}