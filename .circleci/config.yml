version: 2
defaults: &defaults
    docker:
      - image: cimg/python:3.12.1-browsers
install_dependency: &install_dependency
  name: Installation of build and deployment dependencies.
  command: |
    pip3 install awscli --upgrade
install_deploysuite: &install_deploysuite
  name: Installation of install_deploysuite.
  command: |
    git clone --branch v1.4.17 https://github.com/topcoder-platform/tc-deploy-scripts ../buildscript
    cp ./../buildscript/master_deploy.sh .
    cp ./../buildscript/buildenv.sh .
    cp ./../buildscript/awsconfiguration.sh .
restore_cache_settings_for_build: &restore_cache_settings_for_build
  key: docker-node-modules-{{ checksum "package-lock.json" }}

save_cache_settings: &save_cache_settings
  key: docker-node-modules-{{ checksum "package-lock.json" }}
  paths:
    - node_modules

builddeploy_steps: &builddeploy_steps
      - checkout
      - setup_remote_docker
      - run: *install_dependency
      - run: *install_deploysuite
      #- restore_cache: *restore_cache_settings_for_build
      - run: ./build.sh ${APPNAME} ${CI_DEPLOY_TOKEN} ${LOGICAL_ENV} ${BRANCH}
      #- save_cache: *save_cache_settings
      - deploy:
          name: Running MasterScript.
          command: |
            ./awsconfiguration.sh $DEPLOY_ENV
            source awsenvconf
            ./buildenv.sh -e $DEPLOY_ENV -b ${LOGICAL_ENV}-${APPNAME}-deployvar
            source buildenvvar
            ./master_deploy.sh -d ECS -e $DEPLOY_ENV -t latest -s ${LOGICAL_ENV}-global-appvar,${LOGICAL_ENV}-${APPNAME}-appvar -i ${APPNAME}


jobs:
  # Build & Deploy against development backend
  # 'BRANCH' is used for plugins and other dependency repos
  "build-dev":
    <<: *defaults
    environment:
      DEPLOY_ENV: "DEV"
      LOGICAL_ENV: "dev"
      APPNAME: "vanilla-forums"
      CI_DEPLOY_TOKEN: $CI_DEPLOY_TOKEN
      BRANCH: "develop"
    steps: *builddeploy_steps

  "build-prod":
    <<: *defaults
    environment:
      DEPLOY_ENV: "PROD"
      LOGICAL_ENV: "prod"    
      APPNAME: "vanilla-forums"
      CI_DEPLOY_TOKEN: $CI_DEPLOY_TOKEN
      BRANCH: "master"
    steps: *builddeploy_steps

workflows:
  version: 2
  build:
    jobs:
      # Development builds are executed on "develop" branch only.
      - "build-dev":
          context : org-global
          filters:
            branches:
              only:
                - develop

      # Production builds are exectuted only on tagged commits to the
      # master branch.
      - "build-prod":
          context : org-global
          filters:
            branches:
              only: master
